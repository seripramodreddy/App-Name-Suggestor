{"version":3,"sources":["Components/Header.jsx","Components/NameCard.jsx","Components/ResultContainer.jsx","Components/SearchBox.jsx","Components/App.jsx","reportWebVitals.js","index.js"],"names":["Header","props","className","src","alt","headerExpanded","headTitle","NameCard","suggestedName","ResultContainer","suggested","suggestedNames","map","SearchBox","onInputChange","onChange","event","target","value","placeholder","name","require","App","state","headerText","handleInputChange","inputText","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAYeA,EATF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,0CAA0CC,IAAI,iBAAiBF,UAAS,mBAAcD,EAAMI,eAAe,sBAAsB,2BAC1I,oBAAIH,UAAU,YAAd,SAA2BD,EAAMK,gBCI9BC,G,MARA,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cACb,OACI,qBAAKN,UAAU,mBAAf,SACI,mBAAGA,UAAU,cAAb,SAA4BM,QCSzBC,G,MAVO,SAACR,GACnB,IAAMS,EAAUT,EAAMU,eAAeC,KAAI,SAAAJ,GACrC,OAAO,cAAC,EAAD,CAA8BA,cAAeA,GAA9BA,MAE1B,OAAQ,qBAAKN,UAAU,oBAAf,SACHQ,MCCMG,G,MARC,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cACd,OACI,qBAAKZ,UAAU,mBAAf,SACI,uBAAOa,SAAU,SAACC,GAAD,OAASF,EAAcE,EAAMC,OAAOC,QAAQC,YAAY,gBAAgBjB,UAAU,eCIzGkB,EAAMC,EAAQ,IA2BLC,E,4MAxBXC,MAAM,CACFC,WAAW,qBACXnB,gBAAe,EACfM,eAAe,I,EAGnBc,kBAAkB,SAACC,GAGf,EAAKC,SAAS,CAACtB,gBAAgBqB,EAC3Bf,eAAee,EAAUN,EAAKM,GAAW,M,4CAEjD,WAEI,OACI,gCACI,cAAC,EAAD,CAAQrB,eAAgBuB,KAAKL,MAAMlB,eAAgBC,UAAWsB,KAAKL,MAAMC,aACzE,cAAC,EAAD,CAAWV,cAAec,KAAKH,oBAC/B,cAAC,EAAD,CAAiBd,eAAgBiB,KAAKL,MAAMZ,wB,GAnB1CkB,IAAMC,WCATC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e47ffb8c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header=(props)=>{\r\n    return(\r\n        <div className=\"head-container\">\r\n            <img src=\"/images/undraw_Domain_names_re_0uun.svg\" alt=\"Name Suggestor\" className={`head-img ${props.headerExpanded?'head-image-expanded':'head-image-contracted'}`}/>\r\n            <h1 className=\"head-text\">{props.headTitle}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './NameCard.css';\r\n\r\nconst NameCard=({suggestedName})=>{\r\n    return(\r\n        <div className=\"result-name-card\">\r\n            <p className=\"result-name\">{suggestedName}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameCard;","import React from 'react';\r\nimport NameCard from './NameCard';\r\nimport './ResultContainer.css';\r\n\r\n\r\nconst ResultContainer=(props)=>{\r\n    const suggested=props.suggestedNames.map(suggestedName=>{\r\n        return <NameCard key={suggestedName} suggestedName={suggestedName}/>\r\n    })\r\n    return (<div className=\"results-container\">\r\n        {suggested}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ResultContainer;\r\n","import React from \"react\";\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox=({onInputChange})=>{\r\n    return(\r\n        <div className=\"search-container\">\r\n            <input onChange={(event)=>onInputChange(event.target.value)} placeholder=\"Type Keywords\" className=\"search\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport ResultContainer from './ResultContainer';\r\nimport SearchBox from './SearchBox';\r\n/*function App(){\r\n\r\n    return <h1>This is my function</h1>;\r\n} */\r\n\r\nconst name= require('@rstacruz/startup-name-generator');\r\n\r\nclass App extends React.Component{\r\n    state={\r\n        headerText:'App Name Suggestor',\r\n        headerExpanded:true,\r\n        suggestedNames:[]\r\n    }\r\n\r\n    handleInputChange=(inputText)=>{\r\n        \r\n        //alert(\"Iam called\");\r\n        this.setState({headerExpanded:!inputText,\r\n            suggestedNames:inputText?name(inputText):[]})\r\n    }\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <Header headerExpanded={this.state.headerExpanded} headTitle={this.state.headerText}/>\r\n                <SearchBox onInputChange={this.handleInputChange}/>\r\n                <ResultContainer suggestedNames={this.state.suggestedNames}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}